# Generated by Django 5.2.4 on 2025-07-08 11:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('cin', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=50)),
                ('prénom', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('poste', models.CharField(choices=[('Agent', 'Agent Guichet'), ('Admin', 'Administrateur')], max_length=20)),
                ('adresse', models.CharField(max_length=255)),
                ('téléphone', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Prix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prix_par_lettre', models.DecimalField(decimal_places=2, max_digits=6)),
                ('date_effet', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Quartier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code_postal', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='TypeE_Barkia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('mise_en_page', models.TextField(help_text='Instructions ou contenu HTML de mise en page propre à ce type')),
            ],
        ),
        migrations.CreateModel(
            name='Ville',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('code_postal', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ClientMoral',
            fields=[
                ('ice', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('intitulé', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('Entreprise', 'Entreprise'), ('Association', 'Association'), ('Société', 'Société'), ('Administration', 'Administration')], max_length=20)),
                ('adresse', models.CharField(max_length=255)),
                ('gsm', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_moral', to=settings.AUTH_USER_MODEL)),
                ('quartier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisations', to='core.quartier')),
                ('ville', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisations', to='core.ville')),
            ],
        ),
        migrations.CreateModel(
            name='E_Barkia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_e_barkia', models.CharField(editable=False, max_length=50, unique=True)),
                ('contenu', models.TextField()),
                ('objet', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('Urgent', 'Urgent'), ('Normal', 'Normal')], max_length=10)),
                ('date_envoi', models.DateField(auto_now_add=True)),
                ('heure_envoi', models.TimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('Déclaré', 'Déclaré'), ('Prise en charge', 'Prise en charge'), ('Distribué', 'Distribué'), ('Livrée', 'Livrée')], default='Déclaré', max_length=20)),
                ('intitulé_destinataire', models.CharField(max_length=100)),
                ('adresse_destinataire', models.CharField(max_length=255)),
                ('nbre_caractere', models.PositiveIntegerField(default=0, editable=False)),
                ('compteur', models.PositiveIntegerField(default=1)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebarkia', to='core.clientmoral')),
                ('quartier_destinataire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='e_barkia_quartier', to='core.quartier')),
                ('type_format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='e_barkias', to='core.typee_barkia')),
                ('ville_destinataire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='e_barkia_ville', to='core.ville')),
            ],
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('date_paiement', models.DateField(auto_now_add=True)),
                ('e_barkia', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paiement', to='core.e_barkia')),
            ],
        ),
        migrations.CreateModel(
            name='Livraison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_livraison', models.DateField()),
                ('heure_livraison', models.TimeField()),
                ('cin_destinataire', models.CharField(max_length=10)),
                ('e_barkia', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='livraison', to='core.e_barkia')),
                ('employé', models.ForeignKey(limit_choices_to={'poste': 'Agent'}, on_delete=django.db.models.deletion.CASCADE, to='core.personnel')),
            ],
        ),
        migrations.AddField(
            model_name='quartier',
            name='ville',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quartiers', to='core.ville'),
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('ice', models.CharField(max_length=15, unique=True)),
                ('intitulé', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('Entreprise', 'Entreprise'), ('Association', 'Association'), ('Société', 'Société'), ('Administration', 'Administration')], max_length=20)),
                ('gsm', models.CharField(max_length=20)),
                ('rue', models.CharField(max_length=255)),
                ('is_approved', models.BooleanField(default=False)),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('quartier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.quartier')),
                ('ville', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ville')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='quartier',
            unique_together={('nom', 'ville')},
        ),
    ]
